import time
from RkSDK import RkSDK
from RkSDK import Rk初始化软件入参类
from RkSDK import Rk通讯加密方式枚举类
from RkSDK import Rk禁用还是删除枚举类
from RkSDK import Rk结果心跳失败类

global rksdk
rksdk = RkSDK()
rk初始化软件入参 = Rk初始化软件入参类()
def 接收心跳失败的函数(rk结果心跳失败: Rk结果心跳失败类):
    print("错误编码：" + str(rk结果心跳失败.错误编码))
    print("错误消息：" + rk结果心跳失败.错误消息)
    #错误编码有以下几种对您可能有用处：
    # 1053:此软件已被禁用
    # 6005:卡密被禁用
    # 6003:卡密到期
    # 6004:卡密点数不足
    # 4005:账号被禁用
    # 4003:账号到期
    # 4004:账号点数不足
    # 1067:被其它顶号登录
    # 1013:非绑定电脑上登陆
    # 1093:请求过快，请10分钟后再试【请您差开时间的访问，别连续不间断的请求，容易被服务器拉黑IP】

    # 你可以根据以上错误编码，在下面写您自己的业务逻辑代码
    # 您自己的业务逻辑代码.................................

    #只要收到心跳错误消息，那么就说明您的软件是非正常运行，那么处理了您的业务逻辑代码后，直接强制把您软件整个关闭吧！
    rksdk.关闭当前软件()

def 单码操作示例(km):
    rk初始化软件入参.平台用户编码 = "8a525f0ca455eb9a"
    rk初始化软件入参.软件编码 = "dcf1991cd7ab5cd9"
    rk初始化软件入参.通讯加密方式 = Rk通讯加密方式枚举类.DES加密
    rk初始化软件入参.加密Key = "2b6c6575"
    rk初始化软件入参.签名盐 = "44d28116"
    rk初始化软件入参.软件版本号 = "v1.0"
    rk初始化软件入参.心跳失败的回调函数 = 接收心跳失败的函数
    rk结果初始化软件 = rksdk.初始化软件函数(rk初始化软件入参)

    if rk结果初始化软件.错误编码 == 0:
        print("\n初始初始化成功，软件公告：" + rk结果初始化软件.软件信息.软件公告 +
              " 软件基础数据：" + rk结果初始化软件.软件信息.软件基础数据 + " 软件名称：" + rk结果初始化软件.软件信息.软件名称 +
              " 咨询官网：" + rk结果初始化软件.软件信息.咨询官网 + " 咨询微信：" + rk结果初始化软件.软件信息.咨询微信 +
              " 软件当前最新版本号：" + rk结果初始化软件.软件信息.软件当前最新版本号 +
              " 软件更新的网盘地址：" + rk结果初始化软件.软件信息.软件更新的网盘地址 +
              " 网盘提取码：" + rk结果初始化软件.软件信息.网盘提取码 +
              " 软件是否强制更新：" + str(rk结果初始化软件.软件信息.软件是否强制更新))

        time.sleep(1)
        rk结果单码登录 = rksdk.单码登录函数(km)
        if rk结果单码登录.错误编码 == 0:
            # 登录成功后，在此写你自己的业务逻辑代码
            print("单码登录成功，账号到期时间：" + rk结果单码登录.到期时间 + "  账号剩余点数：" + str(
                rk结果单码登录.剩余点数) + " 备注：" + rk结果单码登录.备注 + " 角色名称：" + rk结果单码登录.角色名称)

            # 此功能，可以使您软件一些重要的数据放在服务器上，当登录成功后，才能获取得到
            # 如果破解者想破解您的软件，那到至少得要购买一套您的软件，他才能拿到您的这个核心数据
            # 所以，建议您有重要的数据，最好是放在此远程变量中
            # 远程变量是在：后台-->防破解管理-->远程变量列表，里面进行设置

            # 该功能提供可实现算法与程序分离，防止核心算法和数据被破解者进行破解
            # 需要注意的是：您后台设置的“转发URL”，瑞科网络平台在请求时，不参大于5秒钟，否则返回的结果是超时
            # 原理：
            # 1、在后台->防破管理->远程算法列表->添加好算法转发的地址
            # 2、在您的软件中调用“瑞科子程序_获取远程算法结果”，并传入你转发地址需要的参数
            # 3、当瑞科网络验证平台收到你软件的请求时，会把你后台设置好的转发地址进行请求，并且会把你软件提交上来的参数一起带过去
            # 4、当瑞科网络验证接收到您设置的转发地址返回来的数据，然后再把此数据下发到您的软件中去
            # 这样一来，有些比较私密的算法或者有些私密的数据，可以通过您自己的服务器进行获取


            time.sleep(1)
            # 扣的点数：如果传入0，那么就扣除后台设置的数值
            rk结果扣点 = rksdk.扣点函数(1)
            if rk结果扣点.错误编码 == 0:
                print("扣点成功，剩余点数：" + str(rk结果扣点.剩余点数))
            else:
                print("扣点失败：" + rk结果扣点.错误消息)

            time.sleep(1)
            rk结果单码详情 = rksdk.单码详情函数()
            if rk结果单码详情.错误编码 == 0:
                print("单码详情获取成功，单码到期时间：" + rk结果单码详情.到期时间 + "  单码剩余点数：" + str(
                    rk结果单码详情.剩余点数) + " 备注：" + rk结果单码详情.备注)
            else:
                print("单码详情获取失败：" + rk结果单码详情.错误消息)


            time.sleep(1)
            rk结果基础 = rksdk.退出登录函数()
            if rk结果基础.错误编码 == 0:
                print("退出登录成功")
        else:
            print("单码登录失败，错误编码：" + str(rk结果单码登录.错误编码) + " 错误消息：" + rk结果单码登录.错误消息)
            return 0



    else:
        print("\n软件初始化失败，错误编码：" + str(rk结果初始化软件.错误编码) + "  错误消息：" + rk结果初始化软件.错误消息)
        return 0


